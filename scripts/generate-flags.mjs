import { promises as fs } from 'node:fs'
import path from 'node:path'
import url from 'node:url'

const __dirname = path.dirname(url.fileURLToPath(import.meta.url))
const SRC_DIR = path.resolve(__dirname, '..', 'src')
const FLAGS_DIR = path.join(SRC_DIR, 'assets', 'flags')
const FLAGS_TS = path.join(SRC_DIR, 'flags.ts')
const INDEX_TS = path.join(SRC_DIR, 'index.ts')

// Helpers
const pascal = (s) =>
  s
    .replace(/[^a-zA-Z0-9]+/g, ' ')
    .split(' ')
    .filter(Boolean)
    .map(w => w[0].toUpperCase() + w.slice(1).toLowerCase())
    .join('')

async function ensureDirs() {
  await fs.mkdir(FLAGS_DIR, { recursive: true })
}

async function getSvgs() {
  const files = await fs.readdir(FLAGS_DIR)
  return files
    .filter(f => f.toLowerCase().endsWith('.svg'))
    .map(f => ({
      file: f,
      base: f.replace(/\.svg$/i, ''),
      code: f.replace(/\.svg$/i, '').toLowerCase()
    }))
    .sort((a, b) => a.code.localeCompare(b.code))
}

function emitFlagsTs(entries) {
  // Lazy imports for dynamic component
  const lines = []
  lines.push('// AUTO-GENERATED by scripts/generate-flags.mjs — do not edit manually.')
  lines.push('const flags: Record<string, () => Promise<any>> = {')
  for (const { code } of entries) {
    lines.push(`  '${code}': () => import('./assets/flags/${code}.svg'),`)
  }
  lines.push('}')
  lines.push('')
  lines.push('export default flags')
  lines.push('')
  return lines.join('\n')
}

function emitIndexTs(entries) {
  const lines = []
  lines.push('// AUTO-GENERATED by scripts/generate-flags.mjs — do not edit manually.')
  lines.push("import type { App } from 'vue'")  // ✅ ensure Vue type is imported

  // Import flag components
  for (const { code } of entries) {
    const name = pascal(code) + 'Flag'
    lines.push(`import ${name} from './assets/flags/${code}.svg'`)
  }
  lines.push(`import CountryFlag from './CountryFlag.vue'`)
  lines.push('')

  // Exports
  lines.push('export { CountryFlag,')
  for (const { code } of entries) {
    const name = pascal(code) + 'Flag'
    lines.push(`  ${name},`)
  }
  lines.push('}')
  lines.push('')

  // Plugin (typed)
  lines.push('export const CountryFlagPlugin = {')
  lines.push('  install(app: App) {')  // ✅ app is typed
  lines.push("    app.component('CountryFlag', CountryFlag)")
  lines.push('  }')
  lines.push('}')
  lines.push('')

  // Default export
  lines.push('export default CountryFlag')
  lines.push('')
  return lines.join('\n')
}


async function main() {
  await ensureDirs()
  const svgs = await getSvgs()

  if (svgs.length === 0) {
    console.warn(`[generate-flags] No SVGs found in ${FLAGS_DIR}. Place files like 'uk.svg' there.`)
  }

  await fs.writeFile(FLAGS_TS, emitFlagsTs(svgs), 'utf8')
  await fs.writeFile(INDEX_TS, emitIndexTs(svgs), 'utf8')

  console.log(`[generate-flags] Wrote ${path.relative(SRC_DIR, FLAGS_TS)} and ${path.relative(SRC_DIR, INDEX_TS)} with ${svgs.length} flag(s).`)
}

main().catch((err) => {
  console.error('[generate-flags] Error:', err)
  process.exit(1)
})
